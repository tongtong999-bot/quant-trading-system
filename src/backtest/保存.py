import pandas as pd
from pathlib import Path
from datetime import datetime
import json

# 创建输出目录
output_dir = Path("波动性收割机策略回测报告")
output_dir.mkdir(exist_ok=True)

# 策略概述信息
strategy_info = [
    {"项目": "策略名称", "内容": "波动性收割机策略（Dynamic Delta Management）"},
    {"项目": "核心理念", "内容": "基于趋势判断能力的动态Delta管理系统"},
    {"项目": "执行原则", "内容": "右侧交易+多重确认+严格风控"},
    {"项目": "适用范围", "内容": "高波动性、流动性充足的加密货币市场"},
    {"项目": "风险等级", "内容": "中低风险（严格风控体系）"},
    {"项目": "预期年化收益", "内容": "200-350%（考虑机会频率）"}
]

# 表1：核心执行数据
cases_data = [
    {"序号": 1, "币种": "WLFI", "市场环境": "双向波动型", "周期天数": 15, "建仓价格": 0.24, "平仓价格": "0.39/0.17", "净收益U": 500.90, "ROI": "25.05%", "验证价值": "完整周期适应性"},
    {"序号": 2, "币种": "SOMI", "市场环境": "单边上涨型", "周期天数": 2.5, "建仓价格": 0.41, "平仓价格": "0.68", "净收益U": 217.39, "ROI": "10.87%", "验证价值": "V型反转捕获能力"},
    {"序号": 3, "币种": "BTR", "市场环境": "单边下跌型", "周期天数": 5, "建仓价格": 0.078, "平仓价格": "0.074/0.056", "净收益U": 123.56, "ROI": "6.18%", "验证价值": "熊市防守反击能力"},
    {"序号": 4, "币种": "ARIA", "市场环境": "混沌震荡型", "周期天数": 4, "建仓价格": "-", "平仓价格": "-", "净收益U": 0.00, "ROI": "0%", "验证价值": "智能过滤机制"},
    {"序号": 5, "币种": "MITO", "市场环境": "复杂多变型", "周期天数": 1.5, "建仓价格": 0.175, "平仓价格": "0.170/0.145", "净收益U": 81.49, "ROI": "4.07%", "验证价值": "选择性执行纪律"},
    {"序号": 6, "币种": "PTB", "市场环境": "理想上涨型", "周期天数": 2.5, "建仓价格": 0.031, "平仓价格": "0.051", "净收益U": 226.20, "ROI": "11.31%", "验证价值": "理想环境表现"},
    {"序号": 7, "币种": "TAKE", "市场环境": "缓慢下跌型", "周期天数": 1.5, "建仓价格": 0.175, "平仓价格": "0.170/0.145", "净收益U": 57.16, "ROI": "2.86%", "验证价值": "缓趋势适应性"},
    {"序号": 8, "币种": "M", "市场环境": "超级爆发型", "周期天数": 12, "建仓价格": 0.45, "平仓价格": "1.45", "净收益U": 1776.00, "ROI": "88.80%", "验证价值": "极限执行纪律"}
]

# 表2：收益构成分析
profit_breakdown = [
    {"币种": "WLFI", "现货收益U": 625.00, "空单成本U": -362.50, "毛利润U": 262.50, "交易成本U": 192.50, "净收益U": 500.90, "成本率": "9.6%"},
    {"币种": "SOMI", "现货收益U": 658.53, "空单成本U": -380.64, "毛利润U": 277.89, "交易成本U": 60.50, "净收益U": 217.39, "成本率": "2.8%"},
    {"币种": "BTR", "现货收益U": -51.28, "空单收益U": 212.84, "毛利润U": 161.56, "交易成本U": 38.00, "净收益U": 123.56, "成本率": "1.9%"},
    {"币种": "ARIA", "现货收益U": 0.00, "空单收益U": 0.00, "毛利润U": 0.00, "交易成本U": 0.00, "净收益U": 0.00, "成本率": "0%"},
    {"币种": "MITO", "现货收益U": -28.57, "空单收益U": 125.73, "毛利润U": 97.16, "交易成本U": 40.00, "净收益U": 81.49, "成本率": "2.0%"},
    {"币种": "PTB", "现货收益U": 645.16, "空单成本U": -370.96, "毛利润U": 274.20, "交易成本U": 48.00, "净收益U": 226.20, "成本率": "2.4%"},
    {"币种": "TAKE", "现货收益U": -28.57, "空单收益U": 125.73, "毛利润U": 97.16, "交易成本U": 40.00, "净收益U": 57.16, "成本率": "2.0%"},
    {"币种": "M", "现货收益U": 2222.00, "空单成本U": -371.00, "毛利润U": 1851.00, "交易成本U": 75.00, "净收益U": 1776.00, "成本率": "3.8%"}
]

# 表3：核心KPI统计
kpi_summary = [
    {"指标类别": "成功率指标", "具体指标": "总体胜率", "数值": "87.5%", "评级": "优秀", "备注": "7/8，含观望案例"},
    {"指标类别": "成功率指标", "具体指标": "执行样本胜率", "数值": "100%", "评级": "完美", "备注": "7/7，参与交易样本"},
    {"指标类别": "成功率指标", "具体指标": "资本保护成功率", "数值": "100%", "评级": "完美", "备注": "8/8，零亏损记录"},
    {"指标类别": "收益指标", "具体指标": "总净收益", "数值": "2982.7U", "评级": "-", "备注": "8案例合计"},
    {"指标类别": "收益指标", "具体指标": "平均收益率", "数值": "21.31%", "评级": "优秀", "备注": "仅盈利样本"},
    {"指标类别": "收益指标", "具体指标": "中位数收益率", "数值": "10.87%", "评级": "良好", "备注": "更稳健期望"},
    {"指标类别": "收益指标", "具体指标": "最大单次收益", "数值": "88.80%", "评级": "卓越", "备注": "M案例表现"},
    {"指标类别": "风险指标", "具体指标": "最大回撤", "数值": "0%", "评级": "完美", "备注": "无亏损退出"},
    {"指标类别": "风险指标", "具体指标": "平均持仓时间", "数值": "5.5天", "评级": "-", "备注": "快速周转"},
    {"指标类别": "风险指标", "具体指标": "风险调整年化收益", "数值": "200-350%", "评级": "优秀", "备注": "考虑机会频率"}
]

# 表4：收益分布
profit_distribution = [
    {"收益区间": "超高收益(>50%)", "案例数": 1, "占比": "12.5%", "代表案例": "M(88.8%)", "特征": "极端行情捕获"},
    {"收益区间": "高收益(20-50%)", "案例数": 1, "占比": "12.5%", "代表案例": "WLFI(25.05%)", "特征": "完整周期收益"},
    {"收益区间": "中等收益(10-20%)", "案例数": 2, "占比": "25%", "代表案例": "SOMI,PTB", "特征": "标准趋势捕获"},
    {"收益区间": "低收益(5-10%)", "案例数": 1, "占比": "12.5%", "代表案例": "BTR(6.18%)", "特征": "防守型收益"},
    {"收益区间": "微收益(0-5%)", "案例数": 2, "占比": "25%", "代表案例": "MITO,TAKE", "特征": "选择性参与"},
    {"收益区间": "零收益", "案例数": 1, "占比": "12.5%", "代表案例": "ARIA(0%)", "特征": "智能观望"}
]

# 表5：环境表现分析
env_performance = [
    {"环境类型": "强势上涨", "案例数": 3, "平均收益率": "37.01%", "胜率": "100%", "适用性": "★★★★★", "难度": "中等", "风险": "中低"},
    {"环境类型": "单边下跌", "案例数": 2, "平均收益率": "4.52%", "胜率": "100%", "适用性": "★★★★", "难度": "中等", "风险": "低"},
    {"环境类型": "双向波动", "案例数": 1, "平均收益率": "25.05%", "胜率": "100%", "适用性": "★★★★★", "难度": "较高", "风险": "中等"},
    {"环境类型": "混沌震荡", "案例数": 2, "平均收益率": "2.04%", "胜率": "50%", "适用性": "★(观望)", "难度": "低", "风险": "零"}
]

# 表6：策略应对手册
strategy_playbook = [
    {"环境类型": "理想上涨", "技术特征": "HH-HL+放量突破", "策略应对": "分批减空释放潜力", "预期收益": "8-25%", "成功因素": "趋势识别+分批纪律"},
    {"环境类型": "超级爆发", "技术特征": "垂直拉升+巨量", "策略应对": "严格分批+纪律止盈", "预期收益": "20-90%", "成功因素": "极强执行纪律"},
    {"环境类型": "持续下跌", "技术特征": "LL-LH+放量下跌", "策略应对": "卖现货转纯空", "预期收益": "3-8%", "成功因素": "转换时机把握"},
    {"环境类型": "双向波动", "技术特征": "完整周期波动", "策略应对": "双向捕获收益", "预期收益": "15-30%", "成功因素": "全周期管理"},
    {"环境类型": "混沌震荡", "技术特征": "缺乏持续趋势", "策略应对": "严格观望保护", "预期收益": "0%", "成功因素": "过滤纪律"}
]

# 表7：建仓检查清单
entry_checklist = [
    {"检查项目": "流动性要求", "标准": "5档深度≥50,000U", "重要性": "必要条件", "检查方法": "实时监控盘口"},
    {"检查项目": "价差控制", "标准": "买卖价差≤30bps", "重要性": "必要条件", "检查方法": "成本计算确认"},
    {"检查项目": "技术结构", "标准": "HH-HL/LL-LH确认", "重要性": "核心条件", "检查方法": "多周期验证"},
    {"检查项目": "成交量确认", "标准": "突破放量≥30%", "重要性": "重要条件", "检查方法": "量价配合检查"},
    {"检查项目": "均线配合", "标准": "EMA20/50方向一致", "重要性": "重要条件", "检查方法": "技术指标确认"},
    {"检查项目": "右侧交易", "标准": "3根K线确认突破", "重要性": "核心原则", "检查方法": "避免假突破"}
]

# 表8：动态仓位管理
position_management = [
    {"市场状态": "上涨趋势", "触发条件": "+20%/+35%/+50%", "操作方式": "分批平空30%/30%/40%", "仓位变化": "逐步减空", "敞口变化": "0%→100%多头"},
    {"市场状态": "下跌趋势", "触发条件": "趋势确认", "操作方式": "卖现货转纯空", "仓位变化": "一次性转换", "敞口变化": "0%→100%空头"},
    {"市场状态": "震荡状态", "触发条件": "缺乏明确方向", "操作方式": "维持中性/观望", "仓位变化": "不变", "敞口变化": "保持0%"},
    {"市场状态": "不确定", "触发条件": "信号混乱", "操作方式": "强制观望", "仓位变化": "不参与", "敞口变化": "0%"}
]

# 表9：风险控制规则
risk_rules = [
    {"风控类型": "仓位风控", "规则": "净敞口≤30%", "触发条件": "实时监控", "应对措施": "立即减仓", "优先级": "最高"},
    {"风控类型": "亏损风控", "规则": "单次亏损≤15%", "触发条件": "浮亏达标", "应对措施": "强制止损", "优先级": "最高"},
    {"风控类型": "时间风控", "规则": "12小时未确认", "触发条件": "拆腿后计时", "应对措施": "回归中性", "优先级": "高"},
    {"风控类型": "价格风控", "规则": "突破拆腿点±10%", "触发条件": "价格触发", "应对措施": "立即回补", "优先级": "高"},
    {"风控类型": "保证金风控", "规则": "使用率≤70%", "触发条件": "实时监控", "应对措施": "减仓/追保", "优先级": "中"}
]

# 表10：资金配置指南
capital_guide = [
    {"资金规模": "5千-2万U", "单次投入": "1000-3000U", "风险预算": "10-15%", "并行操作": "1-2个", "预期年化": "150-300%", "优势": "灵活，成本低", "注意事项": "控制频率"},
    {"资金规模": "2万-10万U", "单次投入": "3000-8000U", "风险预算": "8-12%", "并行操作": "2-3个", "预期年化": "200-400%", "优势": "分散，规模效应", "注意事项": "选优质机会"},
    {"资金规模": "10万U以上", "单次投入": "5000-15000U", "风险预算": "5-8%", "并行操作": "3-5个", "预期年化": "150-250%", "优势": "资金效率高", "注意事项": "流动性管理"}
]

# 表11：成功要素权重
success_factors = [
    {"成功要素": "趋势判断能力", "权重": "35%", "表现": "准确识别市场状态", "培养方法": "大量实践+系统复盘"},
    {"成功要素": "执行纪律性", "权重": "25%", "表现": "严格按规则操作", "培养方法": "制度化+自我监督"},
    {"成功要素": "风险管理意识", "权重": "20%", "表现": "资本保护优先", "培养方法": "理念教育+实战体验"},
    {"成功要素": "心理控制能力", "权重": "15%", "表现": "情绪稳定执行", "培养方法": "心理训练+经验积累"},
    {"成功要素": "技术分析技能", "权重": "5%", "表现": "基础分析能力", "培养方法": "系统学习+实践"}
]

# 创建所有表格的字典
all_tables = {
    "策略概述": strategy_info,
    "核心执行数据": cases_data,
    "收益构成分析": profit_breakdown,
    "核心KPI统计": kpi_summary,
    "收益分布统计": profit_distribution,
    "环境表现分析": env_performance,
    "策略应对手册": strategy_playbook,
    "建仓检查清单": entry_checklist,
    "动态仓位管理": position_management,
    "风险控制规则": risk_rules,
    "资金配置指南": capital_guide,
    "成功要素权重": success_factors
}

# 生成Excel文件（多工作表）
excel_path = output_dir / "波动性收割机策略完整报告.xlsx"
with pd.ExcelWriter(excel_path, engine='openpyxl') as writer:
    for sheet_name, data in all_tables.items():
        df = pd.DataFrame(data)
        df.to_excel(writer, sheet_name=sheet_name, index=False)
        
        # 调整列宽
        worksheet = writer.sheets[sheet_name]
        for column in worksheet.columns:
            max_length = 0
            column_letter = column[0].column_letter
            for cell in column:
                try:
                    if len(str(cell.value)) > max_length:
                        max_length = len(str(cell.value))
                except:
                    pass
            adjusted_width = min(max_length + 2, 50)
            worksheet.column_dimensions[column_letter].width = adjusted_width

# 生成单独的CSV文件
csv_dir = output_dir / "CSV文件"
csv_dir.mkdir(exist_ok=True)
for sheet_name, data in all_tables.items():
    df = pd.DataFrame(data)
    csv_path = csv_dir / f"{sheet_name}.csv"
    df.to_csv(csv_path, index=False, encoding='utf-8-sig')

# 生成JSON文件
json_data = {
    "报告生成时间": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
    "策略版本": "波动性收割机 v1.0",
    "数据基准": "基于8个新币案例的完整回测验证",
    "表格数据": all_tables
}

json_path = output_dir / "完整数据.json"
with open(json_path, 'w', encoding='utf-8') as f:
    json.dump(json_data, f, ensure_ascii=False, indent=2)

# 生成完整的Markdown报告
markdown_content = f"""# "波动性收割机"策略完整回测结果总结报告

## 策略核心理念

"波动性收割机"策略是一种**基于趋势判断能力的动态Delta管理系统**。其核心在于：在具备充足流动性的现货与永续合约市场中，以等名义价值建立Delta中性对冲仓位，随后基于成熟的趋势判断能力进行主动Delta管理。

**策略哲学核心：** 从传统"方向性赌博"向现代"科学化风险管理"的重要进化。

---

## 回测案例汇总

{pd.DataFrame(cases_data).to_markdown(index=False)}

---

## 核心统计数据

{pd.DataFrame(kpi_summary).to_markdown(index=False)}

---

## 收益分布统计

{pd.DataFrame(profit_distribution).to_markdown(index=False)}

---

## 环境表现分析

{pd.DataFrame(env_performance).to_markdown(index=False)}

---

## 策略应对手册

{pd.DataFrame(strategy_playbook).to_markdown(index=False)}

---

## 建仓检查清单

{pd.DataFrame(entry_checklist).to_markdown(index=False)}

---

## 动态仓位管理规则

{pd.DataFrame(position_management).to_markdown(index=False)}

---

## 风险控制规则

{pd.DataFrame(risk_rules).to_markdown(index=False)}

---

## 资金配置指南

{pd.DataFrame(capital_guide).to_markdown(index=False)}

---

## 成功要素权重分析

{pd.DataFrame(success_factors).to_markdown(index=False)}

---

## 重要风险提示

**主要风险因素：**
- 市场风险：极端行情可能导致策略失效
- 执行风险：技术故障、网络延迟、人为失误
- 流动性风险：新币流动性枯竭或交易所风险
- 系统性风险：政策变化、市场操纵等

**适用人群限制：**
- 基础要求：至少1年以上交易经验，具备趋势判断能力
- 不适合：完全新手、风险承受能力极低者

---

**免责声明：** 本报告仅供教育和研究目的，不构成投资建议。历史表现不代表未来收益，任何投资都存在亏损风险。

*报告生成时间：{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}*
*策略版本：波动性收割机 v1.0*
"""

markdown_path = output_dir / "完整策略报告.md"
with open(markdown_path, 'w', encoding='utf-8') as f:
    f.write(markdown_content)

print("✅ 文件生成完成！")
print(f"📁 输出目录：{output_dir.resolve()}")
print(f"📊 Excel文件：{excel_path.name}")
print(f"📄 CSV文件夹：{csv_dir.name}")
print(f"🔧 JSON数据：{json_path.name}")
print(f"📝 Markdown报告：{markdown_path.name}")
